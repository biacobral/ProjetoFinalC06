package br.inatel;

import br.inatel.DAO.*;
import br.inatel.Model.Personagens.*;
import br.inatel.Model.Uteis.Menu;

import static br.inatel.Model.Uteis.Eventos.decidirEvento;
import static br.inatel.Model.Uteis.Eventos.fofoca;
import static br.inatel.Model.Uteis.Util.esperaAi;

import java.util.ArrayList;
import java.util.Objects;
import java.util.Random;
import java.util.Scanner;

//Importando a fun√ß√£o que imprime o menu
import static br.inatel.Model.Personagens.Crianca.felicidade;

/*
        Notas para n√≥s mesmos:
        Felipe - Seguinte, implementei as coisas que eu acredito que a gente v√° precisar por enquanto
        nos DAOs, rodei eles e d√° para ver que eles s√£o criados e adicionados no BD quando chama a fun√ß√£o.
            Consegui colocar a lista de crian√ßas que tem no BD na op√ß√£o de escolher para o baile tamb√©m, se voc√™ rodar
        voc√™ vai ver que sai uma lista com as 7 crian√ßas que tem no BD.
            Tamb√©m mudei um pouco o general fada, agora ele tem um metodo s√≥ dele que chama o tribunal da magia,
        isso mais pra poder justificar que a gente criou o fada como abstrata porque o general tem seu pr√≥prio metodo,
        que uma fada n√£o pode ter.
            Outra coisa, n√£o mexe no for que mostra as crian√ßas do baile.
            O que que √© a ideia: A gente recebe um arraylist pela main com as crian√ßas que j√° t√£o cadastradas, s√≥ que
        sempre que a gente cadastra o jogador, ele √© lan√ßado como uma crian√ßa nova no arraylist, o que significa que
        aquele for tem que rodar s√≥ at√© a √∫ltima crian√ßa cadastrada que √© a 7¬™ crian√ßa. O contador do for come√ßa em 1
        para ficar bonitinho na hora de sair, mas eu chamo i-1 quando √© pra sair a crian√ßa, ent√£o a l√≥gica t√° teoricamente
        certa.
            Outra coisa, pra poder testar o baile, eu t√¥ setando a op√ß√£o do evento como a op√ß√£o do baile quando entra na
        fun√ß√£o do baile, tem que mudar isso quando for arrumar os eventos.


        Agora o que tem que ser feito:

        * Colocar no switch do baile o que vai acontecer quando ele chamar uma crian√ßa pro baile (FEITO)

        * Resetar a varinha do padrinho que quebra quando ele perde pra uma anti-fada, que parece n√£o estar funcionando, n√£o
        sei se j√° t√° implementada (FEITO)

        * Dar alguma utilidade pra Magia, que eu acho que podia ser no evento da anti-fada, eles lan√ßarem umas magias um no
        outro um pouco, s√≥ pra falar que tamo usando FELIPE
            - fazer um random nas magias inseridas no BD e mostrar uma de cada fada no combate

        * Colocar um op√ß√£o segura pra decis√£o do baile, aquilo ainda n√£o t√° nem um pouco seguro, vai cair no default e a pessoa
        vai perder o evento (FEITO) OBS.: QUANDO ARRUMEI ISSO DEU O ERRO DO PEDIDO PERSONALIZADO *WPP

            Acho que √© isso, qualquer coisa me manda mensagem, s√≥ n√£o sei que horas eu vou entrar amanh√£, com certeza mesmo √©
         s√≥ na hora que eu chegar em SRS
 */
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Scanner para entrada de dados
        //Criando os DAOs
        AntiFadaDAO antifadaDAO = new AntiFadaDAO();
        Crianca_Faz_DesejosDAO criancaFazDesejosDAO = new Crianca_Faz_DesejosDAO();
        CriancaDAO criancasDAO = new CriancaDAO();
        DesejosDAO desejosDAO = new DesejosDAO();
        GeneralFadaDAO generalFadaDAO = new GeneralFadaDAO();
        MagiaDAO magiaDAO = new MagiaDAO();
        PadrinhosDAO padrinhosDAO = new PadrinhosDAO();
        VarinhaDAO varinhaDAO = new VarinhaDAO();
        //Testando a conex√£o
        antifadaDAO.connectToDb();
        criancasDAO.connectToDb();
        criancaFazDesejosDAO.connectToDb();
        desejosDAO.connectToDb();
        generalFadaDAO.connectToDb();
        magiaDAO.connectToDb();
        padrinhosDAO.connectToDb();
        varinhaDAO.connectToDb();
        //Fun√ß√µes que estamos usando
        Menu menu = new Menu();
        boolean taCerto = false;
        boolean sairDoLoop = false;
        int oqAconteceu = 0;
        int resultado = -1;
        // Definindo nome e sexo do jogador
        System.out.print("Insira seu nome: ");
        String nomeJogador = scanner.nextLine(); // Scanner -> String
        String sexoJogador = "";
        do {
            try {
                System.out.print("Insira seu sexo (F, M, NB): ");
                sexoJogador = scanner.nextLine(); // Scanner -> String
                if (!Objects.equals(sexoJogador, "F") && !Objects.equals(sexoJogador, "M") && !Objects.equals(sexoJogador, "NB")) {
                    throw new Exception("Faz certo, cabe√ßa de ovo!");
                }
                taCerto = true;
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } while (!taCerto); // try catch dentro do while - substituir if else e criar exce√ß√£o geral op√ß√£o invalida
        // Cria√ß√£o do Jogador "Crian√ßa"
        Crianca jogador = new Crianca(1, nomeJogador, 12, sexoJogador, true, "Rua dos Desejos, n¬∫72"); // criando jogador
        criancasDAO.insertCrianca(jogador);
        ArrayList<Crianca> criancasExistentes = criancasDAO.selectCrianca();
        // Cria√ß√£o das Varinhas
        Varinha varinha1 = new Varinha(1, "Azul", "Funcionando");
        varinhaDAO.insertVarinha(varinha1);
        Varinha varinha2 = new Varinha(2, "Roxo", "Funcionando");
        varinhaDAO.insertVarinha(varinha2);
        Varinha antiVarinha1 = new Varinha(3, "Amarelo", "Em manuten√ß√£o");
        varinhaDAO.insertVarinha(antiVarinha1);
        Varinha antiVarinha2 = new Varinha(4, "Vermelho", "Em manuten√ß√£o");
        varinhaDAO.insertVarinha(antiVarinha2);

        // Cria√ß√£o dos Padrinhos
        Padrinhos nossoPadrinho = new Padrinhos(1, "Grimbolino, o Estagi√°rio da Magia", "Padrinho", varinha1);
        Padrinhos nossaMadrinha = new Padrinhos(2, "Celestina Cintilante, a Matriarca da Magia", "Madrinha", varinha2);


        // Cria√ß√£o dos Anti-Fada
        Fada antiPadrinho = new AntiFada(3, "Grimbolona", "Anti-Fada", 3);
        antifadaDAO.insertAntiFada((AntiFada) antiPadrinho);
        Fada antiMadrinha = new AntiFada(4, "Celestina Obscura", "Anti-Fada", 4);
        antifadaDAO.insertAntiFada((AntiFada) antiMadrinha);

        // Cria√ß√£o do General Fada
        Fada general = new GeneralFada(5, "Jorgen Von Estranho, O General da Magia", "General Fada", 5);
        generalFadaDAO.insertGeneralFada((GeneralFada) general);

        // Boas-vindas!!
        esperaAi(400);
        System.out.print("\n Ol√°, " + nomeJogador + "! Parab√©ns por ganhar seus Padrinhos M√°gicos! \n" +
                "Voc√™ tem 12 anos e mora em Dimmsdale, no endere√ßo " + jogador.getEnderecoCrianca() +
                " e ");
        Random randPadrinho = new Random();
        int idP = randPadrinho.nextInt(1) + 1;
        if (idP == nossoPadrinho.getIdFada()) {
            nossoPadrinho.setCrianca_idCrianca(1);
            System.out.println("o seu padrinho ser√°: ");
            esperaAi(1000);
            System.out.println(nossoPadrinho.getNomeFada());
        } else {
            nossaMadrinha.setCrianca_idCrianca(1);
            padrinhosDAO.insertPadrinho(nossoPadrinho);
            padrinhosDAO.insertPadrinho(nossaMadrinha);
            System.out.println("a sua madrinha ser√°: ");
            esperaAi(1000);
            System.out.println(nossaMadrinha.getNomeFada());
        }
        esperaAi(400);
        menu.warning();
        esperaAi(3500);

        //Aqui √© o big-for(eventos)
        for (int i = jogador.getIdadeCrianca(); i < 18 && !sairDoLoop; i++) {
            try {
                esperaAi(300);
                System.out.println("Bem vindo ao seu " + (i - 11) + "¬∞ ano com seu padrinho");
                fofoca(); // evento fofoca
                if(idP==1) {
                    decidirEvento(antiPadrinho, nossoPadrinho, jogador, criancasExistentes);
                    if(nossoPadrinho.getVarinha().getStatusVarinha().equals("Funcionando")){
                        menu.mostraMenu();
                        int opcao = menu.lerOpcaoSegura("ü™Ñ Digite sua escolha (1-3): ");
                        menu.setOpcaoEscolhida(opcao);
                        resultado = menu.eventos((GeneralFada) general, nossoPadrinho);
                    }
                }
                else{
                    decidirEvento(antiMadrinha, nossaMadrinha, jogador, criancasExistentes);
                    if(nossaMadrinha.getVarinha().getStatusVarinha().equals("Funcionando")){
                        menu.mostraMenu();
                        int opcao = menu.lerOpcaoSegura("ü™Ñ Digite sua escolha (1-3): ");
                        menu.setOpcaoEscolhida(opcao);
                        resultado = menu.eventos((GeneralFada) general, nossaMadrinha);
                    }
                }

                if (resultado != (-1)) {
                    switch (resultado) {
                        case 0://Separa√ß√£o
                            if (idP == nossoPadrinho.getIdFada()) {
                                nossoPadrinho.setCrianca_idCrianca(0);
                            } else {
                                nossaMadrinha.setCrianca_idCrianca(0);
                            }
                            oqAconteceu = 1;
                            sairDoLoop = true;
                            break;
                        case 1://Castigo m√°gico
                            sairDoLoop = true;
                            oqAconteceu = 2;
                            break;
                        case 2://Puni√ß√£o Severa
                            felicidade = 0;
                            oqAconteceu = 3;
                            break;
                        case 3://Sua alma foi selada por 100 anos
                            sairDoLoop = true;
                            oqAconteceu = 4;
                            break;
                        case 4://Buraco negro m√°gico: sugado para o vazio eterno
                            sairDoLoop = true;
                            oqAconteceu = 5;
                            break;
                        case 5://Morte m√°gica: morre
                            sairDoLoop = true;
                            oqAconteceu = 6;
                            break;
                        case 6://Distor√ß√£o temporal: Loop temporal de sofrimento
                            sairDoLoop = true;
                            oqAconteceu = 7;
                            break;
                        default:
                            break;
                    }
                }
                if (menu.getOpcaoEscolhida() != 1 && menu.getOpcaoEscolhida() != 2 && menu.getOpcaoEscolhida() != 3 && (!nossaMadrinha.getVarinha().getStatusVarinha().equals("Funcionando") || !nossoPadrinho.getVarinha().getStatusVarinha().equals("Funcionando")) ) {
                    throw new Exception("Faz certo, cabe√ßa de ovo!");
                }

                System.out.println("Sua felicidade at√© agora √©: " + felicidade + "\n");
                if(felicidade>=100){
                    sairDoLoop = true;
                    oqAconteceu = 8;
                }

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }

        switch (oqAconteceu){
            case 0:
                System.out.println("üåÖ Ap√≥s seis anos m√°gicos ao lado de seu padrinho, chega a hora do adeus...");
                System.out.println("üí´ Foram tempos de aprendizado, aventuras e sonhos realizados.");
                System.out.println("üìà Voc√™ acumulou um total de: " + felicidade + " pontos de felicidade.");
                break;
            case 1:
                System.out.println("üå™Ô∏è Suas escolhas abriram um abismo entre voc√™ e seu padrinho.");
                System.out.println("üîó A conex√£o m√°gica foi rompida √† for√ßa.");
                System.out.println("üòî Ainda assim... voc√™ foi feliz enquanto p√¥de.");
                System.out.println("üìà Voc√™ acumulou um total de: " + felicidade + " pontos de felicidade.");
                break;
            case 2:
                System.out.println("‚öñÔ∏è O Tribunal da Magia observou suas a√ß√µes... e decidiu.");
                System.out.println("üö´ Voc√™ perdeu o direito de realizar mais desejos.");
                System.out.println("üßö Seu padrinho agora se afasta, levando consigo o brilho da varinha.");
                System.out.println("üìà Voc√™ acumulou um total de: " + felicidade + " pontos de felicidade.");
                break;
            case 3:
                System.out.println("‚è≥ Algumas de suas decis√µes tiveram um pre√ßo.");
                System.out.println("üîÅ Parte dos desejos realizados foi desfeita, como se o tempo tivesse voltado.");
                System.out.println("üßö‚Äç‚ôÇÔ∏è Ainda assim, seu padrinho permaneceu mais um pouco... e novos desejos vieram.");
                System.out.println("üìà Voc√™ acumulou um total de: " + felicidade + " pontos de felicidade.");
                break;
            case 4:
                System.out.println("üîí Como puni√ß√£o, voc√™ e seu padrinho foram selados em cristais m√°gicos por 100 anos.");
                System.out.println("‚è≥ O tempo deixar√° de existir para voc√™s... at√© que algu√©m os liberte.");
                System.out.println("üìâ Voc√™ acumulou 0 pontos de felicidade.");
                break;
            case 5:
                System.out.println("üåå Suas a√ß√µes causaram um desequil√≠brio irrevers√≠vel.");
                System.out.println("üï≥Ô∏è Voc√™ foi lan√ßado ao Vazio Eterno, onde o tempo, som e luz n√£o existem.");
                System.out.println("üìâ Voc√™ acumulou 0 pontos de felicidade.");
                break;
            case 6:
                System.out.println("üî• O Tribunal da Magia considerou sua exist√™ncia uma afronta √†s leis m√°gicas.");
                System.out.println("üåã A senten√ßa foi implac√°vel: voc√™ foi lan√ßado em um vulc√£o em erup√ß√£o.");
                System.out.println("üíÄ Voc√™ morreu.");
                break;
            case 7:
                System.out.println("üåÄ Voc√™ caiu em um ciclo eterno de sofrimento ‚Äî um feiti√ßo que repete suas piores mem√≥rias sem fim.");
                System.out.println("üï∞Ô∏è Cada momento se repete, sem escapat√≥ria, sem reden√ß√£o.");
                System.out.println("üìâ Voc√™ acumulou 0 pontos de felicidade.");
                break;
            case 8:
                System.out.println("üåà Voc√™ viveu anos t√£o cheios de alegria que sua luz agora precisa alcan√ßar outras vidas.");
                System.out.println("üßö Seu padrinho precisa partir para ajudar uma nova crian√ßa, mas ele parte com orgulho.");
                System.out.println("üò≠ A despedida n√£o √© triste ‚Äî √© celebrada com gratid√£o.");
                System.out.println("üèÜ Voc√™ conquistou o *pico da felicidade*!");
                break;
            default:
                break;
        }
        scanner.close();
    }
}